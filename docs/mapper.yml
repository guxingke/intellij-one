namespace: example
definitions:
  - name: xxx # 没啥用，标记下，日志记录需要
    enable: true
    inputType: class # class | inteface | primitive
    intputName: java.lang.String # 输入类型，类全限定名, 接口全限定名，int/bool 等原始类型名
    outputType: class
    outputName: java.lang.Enum
    requires: # 当前生效条件, 多个条件的情况下，需要全部满足
      - type: class # 类, 类存在
        name: java.util.stream.Stream # 类名
      - type: method # 方法, 方法存在, 暂只匹配方法名
        clazz: $inputName$ # 类名，$xxx$ 为变量，可指定为具体类名
        name: getId  # 方法名
      - type: field # 公开字段存在
        clazz: $outputName$ # 类名，$xxx$ 为变量，可指定为具体类名
        name: value
    template: "$getExpr$ == null ? null : Enum.valueof($getReturnTypeName$.class, $getExpr$)"
  - name: xxxyyy # 没啥用，标记下，日志记录需要
    enable: true
    inputType: class # class | inteface | primitive
    intputName: java.lang.Enum # 输入类型，类全限定名, 接口全限定名，int/bool 等原始类型名
    outputType: class
    outputName: java.lang.String
    requires: # 当前生效条件, 多个条件的情况下，需要全部满足
      - type: class # 类, 类存在
        name: java.util.stream.Stream # 类名
      - type: method # 方法, 方法存在, 暂只匹配方法名
        clazz: $inputName$ # 类名，$xxx$ 为变量，可指定为具体类名
        name: getId  # 方法名
      - type: field # 公开字段存在
        clazz: $outputName$ # 类名，$xxx$ 为变量，可指定为具体类名
        name: value
    template: "$getExpr$ == null ? null : $getExpr$.name())"
